import { Typography } from '@mui/material'
import classNames from 'classnames'
import PropTypes from 'prop-types'
import React from 'react'
import TextStyles from './TextStyles'

function Text(props) {
    const classes = TextStyles()
    const { children,
        smallLabel, mediumLabel, largeLabel, veryLargeLabel,
        smallBlack, mediumBlack, largeBlack,
        smallBoldBlack, mediumBoldBlack, mediumBoldPrimary, largeBoldBlack,
        smallRed, mediumRed, largeRed,
        mediumBoldRed,
        smallGreen, mediumGreen, largeGreen,
        smallYellow, mediumYellow, largeYellow,
        smallBlue, mediumBlue, largeBlue,
        smallWhite, mediumWhite, largeWhite,
        veryLargeBlack, smallGrayLabel,
        smallLightBlue, mediumLightBlue, largeLightBlue,
        verySmallLabel,
        smallOrange, mediumOrange, largeOrange, className,
        smallBoldBlue, mediumBoldBlue, largeBoldBlue,
        smallBoldGreen, smallBoldOrange, verySmallGreen, verySmallBoldBlack,
        mediumLessBoldBlack, red, sidebarText, BrowmnMnStepperText,
        errorText, headerBlack,
        profileTitle, mediumGrey, largeBldBlack, largeGrey,
        checkboxlable, BlackExtraDark,
        overViewAmount,
        overViewLable, blackFont14, mediumOverView, mediumViewAmt, smallGrey, boldBlackfont600,
        largeGreyTxt,largeGrey16, mediumBlackColor, greyLabel,
        cardTitle,
        smallBlue1,
        boldBlackfont16, verySmallBlack,
        boldBlackfont22,
        smallGreyText,
        blackHeader18, mediumBlack14,
        blackHeader,mediumBoldBlack2,lightGrey3,mediumGrey2,blackHeader1,infoText,
        popupHead1,popupHead2,mediumBoldWhite,largeBoldGreen,employeeAdded , radarDetails, 
        ...rest
    } = props

    /**
     * When you called this function just you have to pass defined props for styles for typogrophy
     * ----------
     * if prop is not avaliable create new class in CustomTextStyles file for styles and add that class in 
     * >props 
     * >btnClasses
     * >Text.propTypes
     * ------------
     * ------------
     * @parem children :- content of the Text excepted type `node`
     * */

    const btnClasses = classNames({
        [className]: className,
        [classes.smallLabel]: smallLabel,
        [classes.mediumLabel]: mediumLabel,
        [classes.largeLabel]: largeLabel,
        [classes.smallBlack]: smallBlack,
        [classes.mediumBlack]: mediumBlack,
        [classes.largeBlack]: largeBlack,
        [classes.smallBoldBlack]: smallBoldBlack,
        [classes.mediumBoldBlack]: mediumBoldBlack,
        [classes.mediumBoldPrimary]: mediumBoldPrimary,
        [classes.largeBoldBlack]: largeBoldBlack,
        [classes.smallRed]: smallRed,
        [classes.mediumRed]: mediumRed,
        [classes.largeRed]: largeRed,
        [classes.smallGreen]: smallGreen,
        [classes.mediumGreen]: mediumGreen,
        [classes.largeGreen]: largeGreen,
        [classes.smallYellow]: smallYellow,
        [classes.mediumYellow]: mediumYellow,
        [classes.largeYellow]: largeYellow,
        [classes.smallBlue]: smallBlue,
        [classes.mediumBlue]: mediumBlue,
        [classes.largeBlue]: largeBlue,
        [classes.smallWhite]: smallWhite,
        [classes.mediumWhite]: mediumWhite,
        [classes.largeWhite]: largeWhite,
        [classes.smallOrange]: smallOrange,
        [classes.mediumOrange]: mediumOrange,
        [classes.largeOrange]: largeOrange,
        [classes.veryLargeBlack]: veryLargeBlack,
        [classes.smallGrayLabel]: smallGrayLabel,
        [classes.smallLightBlue]: smallLightBlue,
        [classes.mediumLightBlue]: mediumLightBlue,
        [classes.largeLightBlue]: largeLightBlue,
        [classes.verySmallLabel]: verySmallLabel,
        [classes.smallBoldBlue]: smallBoldBlue,
        [classes.mediumBoldBlue]: mediumBoldBlue,
        [classes.largeBoldBlue]: largeBoldBlue,
        [classes.smallBoldGreen]: smallBoldGreen,
        [classes.smallBoldOrange]: smallBoldOrange,
        [classes.verySmallGreen]: verySmallGreen,
        [classes.verySmallBoldBlack]: verySmallBoldBlack,
        [classes.mediumBoldRed]: mediumBoldRed,
        [classes.mediumLessBoldBlack]: mediumLessBoldBlack,
        [classes.veryLargeLabel]: veryLargeLabel,
        [classes.red]: red,
        [classes.BrowmnMnStepperText]: BrowmnMnStepperText,
        [classes.errorText]: errorText,
        [classes.headerBlack]: headerBlack,
        [classes.checkboxlable]: checkboxlable,
        [classes.BlackExtraDark]: BlackExtraDark,
        [classes.profileTitle]: profileTitle,
        [classes.mediumGrey]: mediumGrey,
        [classes.largeBldBlack]: largeBldBlack,
        [classes.largeGrey]: largeGrey,
        [classes.overViewLable]: overViewLable,
        [classes.overViewAmount]: overViewAmount,
        [classes.blackFont14]: blackFont14,
        [classes.mediumOverView]: mediumOverView,
        [classes.mediumViewAmt]: mediumViewAmt,
        [classes.smallGrey]: smallGrey,
        [classes.cardTitle]: cardTitle,
        [classes.smallBlue1]: smallBlue1,
        [classes.greyLabel]: greyLabel,
        [classes.boldBlackfont16]: boldBlackfont16,
        [classes.verySmallBlack]: verySmallBlack,
        [classes.largeGreyTxt]: largeGreyTxt,
        [classes.largeGrey16]:largeGrey16,
        [classes.mediumBlackColor]: mediumBlackColor,
        [classes.greyLabel]: greyLabel,
        [classes.boldBlackfont16]: boldBlackfont16,
        [classes.boldBlackfont22]: boldBlackfont22,
        [classes.popupHead1]: popupHead1,
        [classes.popupHead2]: popupHead2,
        [classes.smallGreyText]: smallGreyText,
        [classes.blackHeader18]: blackHeader18,
        [classes.mediumBlack14]: mediumBlack14,
        [classes.verySmallBlack]: verySmallBlack,
        [classes.blackHeader]: blackHeader,
        [classes.mediumBoldBlack2]: mediumBoldBlack2,
        [classes.lightGrey3]: lightGrey3,
        [classes.mediumGrey2]: mediumGrey2,
        [classes.blackHeader1]: blackHeader1,
        [classes.infoText]: infoText,

        [classes.mediumBoldWhite]:mediumBoldWhite,
        [classes.largeBoldGreen]:largeBoldGreen,
        [classes.employeeAdded]: employeeAdded,
        [classes.radarDetails]: radarDetails,
    })
    return (
        <React.Fragment>
            <Typography {...rest} className={btnClasses} component={'div'}>
                {children}
            </Typography>
        </React.Fragment>
    )
}

export default Text

Text.propTypes = {
    variant: PropTypes.oneOf([
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'h7',
        'subtitle1',
        'subtitle2',
        'body1',
        'body2',
        'caption',
        'button',
        'overline',
    ]),
    className: PropTypes.string,
    children: PropTypes.node,
    smallLabel: PropTypes.bool,
    mediumLabel: PropTypes.bool,
    largeLabel: PropTypes.bool,
    smallBlack: PropTypes.bool,
    mediumBlack: PropTypes.bool,
    largeBlack: PropTypes.bool,
    smallBoldBlack: PropTypes.bool,
    mediumBoldBlack: PropTypes.bool,
    mediumBoldPrimary: PropTypes.bool,
    largeBoldBlack: PropTypes.bool,
    smallRed: PropTypes.bool,
    mediumRed: PropTypes.bool,
    largeRed: PropTypes.bool,
    smallGreen: PropTypes.bool,
    mediumGreen: PropTypes.bool,
    largeGreen: PropTypes.bool,
    smallYellow: PropTypes.bool,
    mediumYellow: PropTypes.bool,
    largeYellow: PropTypes.bool,
    smallBlue: PropTypes.bool,
    mediumBlue: PropTypes.bool,
    largeBlue: PropTypes.bool,
    smallWhite: PropTypes.bool,
    mediumWhite: PropTypes.bool,
    largeWhite: PropTypes.bool,
    smallOrange: PropTypes.bool,
    mediumOrange: PropTypes.bool,
    largeOrange: PropTypes.bool,
    veryLargeBlack: PropTypes.bool,
    smallGrayLabel: PropTypes.bool,
    smallLightBlue: PropTypes.bool,
    mediumLightBlue: PropTypes.bool,
    largeLightBlue: PropTypes.bool,
    verySmallLabel: PropTypes.bool,
    smallBoldBlue: PropTypes.bool,
    mediumBoldBlue: PropTypes.bool,
    largeBoldBlue: PropTypes.bool,
    smallBoldGreen: PropTypes.bool,
    smallBoldOrange: PropTypes.bool,
    verySmallGreen: PropTypes.bool,
    verySmallBoldBlack: PropTypes.bool,
    mediumBoldRed: PropTypes.bool,
    mediumLessBoldBlack: PropTypes.bool,
    sidebarText: PropTypes.bool,
    veryLargeLabel: PropTypes.bool,
    red: PropTypes.bool,
    BrowmnMnStepperText: PropTypes.bool,
    errorText: PropTypes.bool,
    headerBlack: PropTypes.bool,
    checkboxlable: PropTypes.bool,
    BlackExtraDark: PropTypes.bool,
    profileTitle: PropTypes.bool,
    mediumGrey: PropTypes.bool,
    largeBldBlack: PropTypes.bool,
    largeGrey: PropTypes.bool,
    overViewLable: PropTypes.bool,
    overViewAmount: PropTypes.bool,
    blackFont14: PropTypes.bool,
    mediumOverView: PropTypes.bool,
    mediumViewAmt: PropTypes.bool,
    smallGrey: PropTypes.bool,
    cardTitle: PropTypes.bool,
    smallBlue1: PropTypes.bool,
    boldBlackfont600: PropTypes.bool,
    largeGreyTxt: PropTypes.bool,
    largeGrey16:PropTypes.bool,
    mediumBlackColor: PropTypes.bool,
    greyLabel: PropTypes.bool,
    boldBlackfont16: PropTypes.bool,
    verySmallBlack: PropTypes.bool,
    boldBlackfont22: PropTypes.bool,
    popupHead1: PropTypes.bool,
    popupHead2: PropTypes.bool,
    smallGreyText: PropTypes.bool,
    blackHeader18: PropTypes.bool,
    mediumBlack14: PropTypes.bool,
    blackHeader: PropTypes.bool,
    mediumBoldBlack2: PropTypes.bool,
    lightGrey3: PropTypes.bool,
    mediumGrey2: PropTypes.bool,
    blackHeader1: PropTypes.bool,
    infoText: PropTypes.bool,
    mediumBoldWhite: PropTypes.bool,
    largeBoldGreen:PropTypes.bool,
    employeeAdded:PropTypes.bool,
    radarDetails: PropTypes.bool,
}

